syntax = "proto3";

package auctionSystem;

option go_package = "github.com/mrphil2105/DISYS-assignment-five;auction";

service ConnectService {
    rpc FinishConnect(PrimaryNode) returns (BackupDetails);
    rpc AddBackup(BackupJoin) returns (Void);
    rpc RemoveBackup(BackupLeave) returns (Void);
}

message BackupDetails {
    uint32 pid = 1;
}

message BackupJoin {
    uint32 pid = 1;
    string port = 2;
}

message BackupLeave {
    uint32 pid = 1;
}

service AuctionService {
    rpc AuctionStarted(Void) returns (Void); // Used by main node to indicate auction start.
    rpc SendBid(Bid) returns (BidAck);
    rpc GetResult(Void) returns (Outcome);
    rpc Ping(Void) returns (Void);
}

message Bid {
    uint32 pid = 1;
    uint32 amount = 2;
}

message BidAck {
    bool success = 1;
}

message Outcome {
    repeated uint32 bidders = 1; // Process ids of all bidders.
    uint32 winner = 2; // The process id of the winner. 0 means no winner yet.
    uint32 highestBid = 3;
}

service FrontendService {
    rpc SendBid(Bid) returns (BidAck);
    rpc GetResult(Void) returns (Outcome);
    rpc SetPrimaryNode(PrimaryNode) returns (Void);
}

message PrimaryNode {
    uint32 pid = 1;
    string port = 2;
}

message Void {}
